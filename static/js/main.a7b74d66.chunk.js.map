{"version":3,"sources":["features/counter/counterSlice.js","assets/imgs/logo.png","assets/imgs/roguecompany.jpg","assets/imgs/cyberpunk.jpg","assets/imgs/watchdogslegion.jpg","assets/imgs/gtav.jpg","assets/imgs/acvalhala.jpg","assets/imgs/fortnite.jpg","assets/imgs/rocketleague.jpg","assets/imgs/footballmanager2020.jpg","assets/imgs/reddeadredemption2.jpg","App.js","app/store.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","App","className","src","logo","type","id","placeholder","rogue","cyberpunk","watchdogs","gtav","valhala","fortnite","rocketlig","footballmanager","reddeadredemption2","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a7b74d66.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","export default __webpack_public_path__ + \"static/media/logo.63d9102a.png\";","export default __webpack_public_path__ + \"static/media/roguecompany.b2e73a91.jpg\";","export default __webpack_public_path__ + \"static/media/cyberpunk.d87bd2ac.jpg\";","export default __webpack_public_path__ + \"static/media/watchdogslegion.0222ec58.jpg\";","export default __webpack_public_path__ + \"static/media/gtav.218f1cf3.jpg\";","export default __webpack_public_path__ + \"static/media/acvalhala.8680910a.jpg\";","export default __webpack_public_path__ + \"static/media/fortnite.4fc4aa76.jpg\";","export default __webpack_public_path__ + \"static/media/rocketleague.da2c4858.jpg\";","export default __webpack_public_path__ + \"static/media/footballmanager2020.954bdb5b.jpg\";","export default __webpack_public_path__ + \"static/media/reddeadredemption2.81dfc308.jpg\";","/* \r\n\r\nBilgisayar Programcılığı Öğrencileri için örnek yapılmıştır.\r\nFront End Epic Games\r\nYazar: Mehmet Basrioğlu\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\n\r\nimport {FaHome,FaStore,FaUserFriends,FaDownload,\r\n  FaUserCircle,FaSearch,FaListUl,\r\n  FaPlay} from \"react-icons/fa\"\r\nimport {AiFillAppstore} from \"react-icons/ai\"\r\nimport {SiUnrealengine} from \"react-icons/si\"\r\nimport {MdSettings} from \"react-icons/md\"\r\n\r\nimport logo from \"./assets/imgs/logo.png\"\r\n\r\nimport rogue from \"./assets/imgs/roguecompany.jpg\"\r\nimport cyberpunk from \"./assets/imgs/cyberpunk.jpg\"\r\nimport watchdogs from \"./assets/imgs/watchdogslegion.jpg\"\r\nimport gtav from \"./assets/imgs/gtav.jpg\"\r\nimport valhala from \"./assets/imgs/acvalhala.jpg\"\r\nimport fortnite from \"./assets/imgs/fortnite.jpg\"\r\nimport rocketlig from \"./assets/imgs/rocketleague.jpg\"\r\n\r\nimport footballmanager from \"./assets/imgs/footballmanager2020.jpg\"\r\nimport reddeadredemption2 from \"./assets/imgs/reddeadredemption2.jpg\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"app_body\">\r\n        <div className=\"sidebar\">\r\n     \r\n          <div className=\"logoarea\">\r\n            <img className=\"logo\" src={logo}></img>\r\n            <h4>Epic Games Clone</h4>\r\n          </div>\r\n\r\n          <div className=\"sidebaritems\">\r\n            <button type=\"submit\"><FaHome className=\"svg\"/>Home</button>\r\n            <button type=\"submit\"><FaStore className=\"svg\"/>Store</button>\r\n            <button type=\"submit\"><AiFillAppstore className=\"svg\"/>Library</button>\r\n            <button type=\"submit\"><FaUserFriends className=\"svg\"/>Friends</button>\r\n            <button type=\"submit\"><SiUnrealengine className=\"svg\"/>Unreal Engine</button>\r\n          </div>\r\n\r\n          <div className=\"sidebaritems_info\">\r\n            <button type=\"submit\"><FaDownload className=\"svg\"/>Downloads</button>\r\n            <button type=\"submit\"><MdSettings className=\"svg\"/>Settings</button>\r\n            <button type=\"submit\">\r\n            <FaUserCircle className=\"svg\"/>\r\n              <span className=\"badge\"></span>\r\n              user</button>\r\n              </div>\r\n\r\n        </div>\r\n        <div className=\"store\">\r\n\r\n   <div className=\"options\">\r\n    <div className=\"played\">\r\n\r\n       <p>Sort by:</p>\r\n       <select id=\"sort\">\r\n  <option value=\"volvo\">Recent Played </option>\r\n  <option value=\"saab\">Date</option>\r\n\r\n</select>\r\n \r\n    </div>\r\n    <div className=\"filter\">\r\n\r\n<p>Filter:</p>\r\n<select id=\"sort\">\r\n<option value=\"volvo\">All </option>\r\n<option value=\"saab\">Installed</option>\r\n\r\n</select>\r\n\r\n</div>\r\n    <div className=\"flex2\">\r\n      <div className=\"list\">\r\n        <AiFillAppstore/>\r\n        <FaListUl/>\r\n      </div>\r\n\r\n      <div className=\"search\">\r\n        <FaSearch/>\r\n        <input type=\"text\" placeholder=\"Search\"/>\r\n      </div>\r\n    </div>\r\n   </div>\r\n   {/* SORT - FİLTER - SEARCH */}\r\n \r\n          {/* OYUNLAR  - ITEMS */}\r\n          <div className=\"cards\">\r\n          <div className=\"carditem \">\r\n              <img src={rogue} className=\"play\"/>\r\n              <p>Rogue Company</p>\r\n              <span><FaPlay/> Play</span>\r\n            </div>\r\n            <div className=\"carditem\">\r\n              <img src={cyberpunk} />\r\n              <p>Cyber Punk 2077</p>\r\n              <span><FaDownload/> Download</span>\r\n            </div>\r\n            <div className=\"carditem\">\r\n              <img src={watchdogs} className=\"play\"/>\r\n              <p>Watchdogs Legion</p>\r\n  \r\n              <span><FaPlay/> Play</span>\r\n            </div>\r\n            <div className=\"carditem\">\r\n              <img src={gtav} />\r\n              <p>Grand Theft Auto V</p>\r\n              <span><FaDownload/> Download</span>\r\n              \r\n            </div>\r\n            <div className=\"carditem\">\r\n              <img src={valhala} />\r\n              <p>Assassin's Creed Valhala</p>\r\n              <span><FaDownload/> Download</span>\r\n            </div>\r\n            <div className=\"carditem\">\r\n              <img src={fortnite} />\r\n              <p>Fortnite</p>\r\n              <span><FaDownload/> Download</span>\r\n            </div>\r\n            <div className=\"carditem\">\r\n              <img src={rocketlig} />\r\n              <p>Rocket League</p>\r\n              <span><FaDownload/> Download</span>\r\n            </div>\r\n            <div className=\"carditem\">\r\n              <img src={footballmanager} />\r\n              <p>Football Manager 2020</p>\r\n              <span><FaDownload/> Download</span>\r\n            </div>\r\n            <div className=\"carditem\">\r\n              <img src={reddeadredemption2} className=\"play\" />\r\n              <p>Red Dead Redemption 2</p>\r\n              <span><FaPlay/> Play</span>\r\n            </div>\r\n       \r\n          </div>\r\n\r\n       \r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__jP0F6\",\"value\":\"Counter_value__1e2aw\",\"button\":\"Counter_button__35ycK\",\"textbox\":\"Counter_textbox__7t_P6\",\"asyncButton\":\"Counter_asyncButton__Zky11 Counter_button__35ycK\"};"],"sourceRoot":""}